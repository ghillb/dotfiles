#!/bin/bash

case $- in
    *i*) ;;
      *) return;; # If not running interactively, don't do anything
esac

stty -ixon # forces control sequences to reach the terminal application (e.g. vi)
stty werase ^H # enable ctrl-backspace previous word kill
set bell-style audible

# if kitty available set TERM accordingly
if [ "$KITTY_WINDOW_ID" ]; then export TERM="xterm-kitty"; else export TERM=xterm-256color; fi

if [ -f /etc/redhat-release ]; then
  export "PKG_MANAGER=dnf"
fi

if [ -f /etc/lsb-release ]; then
  export "PKG_MANAGER=apt"
fi

export VISUAL=$(command -v nvim &>/dev/null && echo "nvim" || echo "vi")
export EDITOR=$VISUAL
export DOTFILES=$HOME/.files
export CODE=$HOME/code
export PATH="$PATH:$HOME/code/scripts/bash:$HOME/code/scripts/ansible:$HOME/.cargo/bin:$HOME/.local/bin"
export LC_ALL=C.UTF-8
export HISTSIZE=HISTFILESIZE='INFINITY'
export HISTIGNORE="pwd:df:du:cd:ls:ll:gpl:gps:gs:gd:gdu:gds:gl:glo:gls:glu:v"
export PROMPT_COMMAND='history -a;history -r;hasjobs=$(jobs -p);echo -en "\033]0;${PWD##*/}\a"'
export GPG_TTY=$(tty)
export GIT_PS1_SHOWDIRTYSTATE=true
export FZF_DEFAULT_OPTS='
  --color fg:#ebdbb2,bg:#282828,hl:#fe8019,fg+:#ebdbb2,bg+:#3c3836,hl+:#d65d0e
  --color info:#83a598,prompt:#bdae93,spinner:#fabd2f,pointer:#fb4934,marker:#fe8019,header:#665c54
'
export FZF_DEFAULT_COMMAND='rg --files --hidden --glob "!{.git,od/*}" --no-ignore'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export NNN_PLUG='o:fzopen;p:preview-tui'
export NNN_FIFO='/tmp/nnn.fifo'
export NNN_FCOLORS='c1e21f70006048f7c6d6abc4'
export NNN_BMS=$NNN_BMS_LOCAL"h:~/;c:$CODE;d:~/dl/;n:~/.notes/;p:~/projects/;"
export NNN_OPENER='dopen'
export WORKSPACE=$HOME/.workspace #jdtls
export ENABLE_BACKGROUND_TASKS=1

source $DOTFILES/.bash/functions.sh
source $DOTFILES/.bash/aliases.sh
source $DOTFILES/.bash/completion.sh
include /usr/lib/git-core/git-sh-prompt; include /usr/lib/git/git-sh-prompt; include /usr/share/git-core/contrib/completion/git-prompt.sh
include $CODE/scripts/bash/utils.sh

# scripted behavior
if [[ -z "$TMUX" && -z $TERM_PROGRAM && ("$SSH_CONNECTION" != "" || -f "/etc/wsl.conf") ]]; then initbash; fi
if [[ "$SSH_CONNECTION" != "" ]]; then trap "kill -9 $(pidof ssh-agent)&>/dev/null" 0; fi

# key binds
bind -x '"\C-b": "cd .."'
bind -x '"\C-j": "cd ~/"'
bind -x '"\C-t": "tx"'
bind -x '"\C-p": fzf-file-widget'
bind -x '"\C-e": $(__fzf_cd__)'
bind -x '"\C-r": __fzf_history__'
bind -x '"\C-o": "todo"'
bind -x '"\C-l": clear'
bind -x '"\C-y": fg'
bind -x '"\e[21~": "htop"' #F10
bind -x '"\ec": fzkill'
bind '"\C-g": "git commit -am \"\""'
bind '"\t":menu-complete'
bind "set show-all-if-ambiguous on"
bind "set completion-ignore-case on"
bind "set menu-complete-display-prefix on"


if command -v starship &> /dev/null; then eval "$(starship init bash)"; fi
if command -v direnv &>/dev/null; then eval "$(direnv hook bash)"; fi
if command -v zoxide &>/dev/null; then eval "$(zoxide init --cmd cd bash)"; fi
