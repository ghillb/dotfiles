vim.g.mapleader = " "
vim.g.localleader = "\\"

local map = vim.keymap.set

map("n", "<up>", "<nop>")
map("n", "<down>", "<nop>")
map("n", "<left>", "<nop>")
map("n", "<right>", "<nop>")
map("c", "<tab>", "<nop>")
map("c", "<s-tab>", "<nop>")
map({ "n", "v" }, "<c-i>", "<c-i>")
map({ "n", "v", "i" }, "<a-tab>", "<nop>")
map({ "n", "v", "i" }, "<a-s-tab>", "<nop>")
map("i", "<c-tab>", "<nop>")
map("i", "<c-s-tab>", "<nop>")
map("n", "<s-space>", "<nop>")
map("n", "<c-s-space>", "<nop>")
map("n", "<esc>", function()
  vim.cmd("nohl")
end)

map({ "n", "v" }, "H", "^")
map({ "n", "v" }, "L", "g_")
map("n", "J", "mzJ`z")
map("n", "K", "i<cr><esc>")
map({ "n", "v" }, "gK", "K")
map({ "n", "v" }, "vv", "V")
map("n", "V", "vg_")
map("n", "Y", "yg_")
map("n", "dd", function()
  if vim.api.nvim_get_current_line():match("^%s*$") then
    print("Empty line")
    return '"_dd'
  else
    return "dd"
  end
end, { expr = true })
map({ "n", "v" }, "x", '"_x')
map({ "n", "v" }, "X", '"_X')
map({ "n", "v" }, "j", "gj")
map({ "n", "v" }, "k", "gk")
map("i", "kj", "<esc>")
map("i", "jk", "<esc>")
map("v", "p", '"_c<c-r><c-o>+<esc>')
map("n", "gp", "viwp", { remap = true })
map("n", "gb", "<C-v>", { desc = "Visual block mode" })
map("n", "n", "nzzzv")
map("n", "N", "Nzzzv")
map("n", "*", "*N")
map("n", "cg*", '*N"ccgn')
map("n", "c*", "*:%s//")
map("v", "<", "<gv")
map("v", ">", ">gv")
map("n", "Q", "@q")
map("n", "d[", ":diffget //2<cr>")
map("n", "d]", ":diffget //3<cr>")
map("n", "gf", user.fn.create_or_go_to_file, { silent = true })
map("x", "s", "<Plug>VSurround")

map("n", "<c-c>", "ciw", { remap = true })
map("n", "<c-j>", "<c-e>")
map("n", "<c-k>", "<c-y>")
map("n", "<c-y>", "<c-b>")
map("n", "<c-l>", ':let @/=""<cr>:e %<cr><c-l>')
map({ "n", "v", "i" }, "<c-s>", function()
  vim.cmd("w")
end)
map({ "n", "v", "i" }, "<c-q>", function()
  if vim.bo.modified and vim.api.nvim_buf_get_name(0) == "" then
    -- New buffer with changes but no filename - just quit without saving
    vim.cmd("q!")
  else
    -- Normal ZZ behavior (save and quit if modified, or just quit)
    vim.cmd('execute "normal ZZ"')
  end
end)
map("i", "<c-bs>", "<c-o>db<c-o>x", { remap = true })
map("i", "<c-F20>", "<c-bs>", { remap = true })
map("i", "<c-w>", "<c-bs>", { remap = true })
map("i", "<c-l>", "<c-o>dl", { remap = true })
map("i", "<c-del>", "<c-o>de", { remap = true })
map("i", "<c-right>", "<c-\\><c-o>w")
map("i", "<c-left>", "<c-\\><c-o>b")

map("t", "`", "<esc>")
map("t", "<esc>", "<c-\\><c-n>")

map("c", "w!!", "w !sudo tee > /dev/null %")
map("c", "GG", '!git -C %:p:h commit -am "--wip--" && git -C %:p:h -c push.default=current push')

map("n", "<a-h>", function()
  user.fn.tmux_switch_pane("h")
end, { silent = true })
map("n", "<a-j>", function()
  user.fn.tmux_switch_pane("j")
end, { silent = true })
map("n", "<a-k>", function()
  user.fn.tmux_switch_pane("k")
end, { silent = true })
map("n", "<a-l>", function()
  user.fn.tmux_switch_pane("l")
end, { silent = true })
map("n", "<a-q>", user.fn.close_view)
map("n", "<a-->", "<c-w>-")
map("n", "<a-=>", "<c-w>+")
map("n", "<a-+>", "<c-w>>")
map("n", "<a-_>", "<c-w><")
map("n", "<a-o>", "<c-w>o<cr>")
map("n", "<c-w>O", ":%bd<cr><c-o>:bd#<cr>")
map("n", "<C-w>z", "<c-w>|<c-w>_")
map("n", "<c-w>tq", ":tabclose<cr>")
map("n", "<c-w>to", ":tabonly<cr>")
map("n", "<left>", ":tabp<cr>")
map("n", "<right>", ":tabn<cr>")
map("n", "<a-left>", ":-tabmove<cr>")
map("n", "<a-right>", ":+tabmove<cr>")

map("n", "<leader><leader>", "a<space><esc>")
map("n", "<leader>bn", ":bnext<cr>")
map("n", "<leader>bp", ":bprevious<cr>")
map("n", "<leader>bc", ":enew<cr>")
map("n", "<leader>bd", ":bd<cr>")
map("n", "<leader>bb", ":buffers<cr>")
map("n", "<leader>bo", ":w<bar>%bd<bar>e#<bar>bd#<cr>")
map("n", "<leader>tg", user.fn.toggle_gutter)
map("n", "<leader>tdt", ":windo diffthis<cr>")
map("n", "<leader>tdo", ":windo diffoff<cr>")
map("n", "<leader>ts", ":setlocal spell!<cr>")
map("n", "<leader>tp", ":set paste!<cr>")
map("n", "<leader>zi", "<c-w>_<bar><c-w>\\|")
map("n", "<leader>zo", "<c-w>=")
map("n", "<leader>if", "i<c-r>=expand('%:t')<cr><esc>")
map("n", "<leader>ipa", "i<c-r>=expand('%:p')<cr><esc>")
map("n", "<leader>ipr", "i<c-r>=expand('%')<cr><esc>")
map("n", "<leader>itd", '"=strftime("%Y-%m-%d")<cr>P')
map("n", "<leader>itt", '"=strftime("%H:%M:%S")<cr>P')
map("n", "<leader>itm", '"=strftime("%Y-%m-%d \\/ %H:%M:%S")<cr>P')
map("n", "<leader>ypd", "yap<S-}>p")
map("n", "<leader>ypu", "yap<S-{>p")
map("n", "<leader>p", "o<esc>p")
map("n", "<leader>P", "O<esc>P")
map("n", "<leader>o", "o<esc>")
map("n", "<leader>O", "O<esc>")
map("n", "<leader>f", "<cmd>Format<cr>", { desc = "Format file" })

map("n", "<localleader><cr>", ":lua user.fn.set_root('git_worktree', true)<cr>", { silent = true })
map("n", "<localleader><bs>", ":lua user.fn.set_root('parent_dir', true)<cr>", { silent = true })
map("n", "<localleader>/", ":lua user.fn.set_root('file_dir', true)<cr>", { silent = true })
map("n", "<localleader>\\", ":lua user.fn.set_root('origin', true)<cr>", { silent = true })
map("n", "<localleader>sr", ":%s///gc<left><left><left><left>")
map("n", "<localleader>sq", ":vim// %<left><left><left>")
map("n", "<localleader>sl", ":lv// %<left><left><left>")
map("n", "<localleader>dw", ":%s/\\s\\+$//e<cr>")
map("n", "<localleader>ve", ":e $MYVIMRC<cr>")
map("n", "<localleader>vr", ":source $MYVIMRC<cr>")
map("n", "<localleader>vs", ":source %<cr>")
map("n", "<localleader>gc", "<cmd>CommitMsg<cr>", { desc = "Generate commit message" })

map("n", "<localleader>pu", ":UpdatePlugins<cr>")

map("x", "il", "g_o^")
map("o", "il", ":<c-u>normal vil<cr>")
map("x", "al", "$o0")
map("o", "al", ":<c-u>normal val<cr>")

map("x", "i%", "ggoGV")
map("o", "i%", ":<c-u>normal vi%<cr>")
