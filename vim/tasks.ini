[*]
molecule_exec=docker exec -it molecule bash -c
molecule_prefix=cd wd/ansible && ANSIBLE_VAULT_PASSWORD_FILE=/wd/ansible/.vault.pw

[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp="$(VIM_PATHNOEXT)"
command:go="$(VIM_PATHNOEXT)"
command:rust=cargo test "$(VIM_FILENAME)"
command:python=python "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:lua=lua "$(VIM_FILENAME)"
command:perl=perl "$(VIM_FILENAME)"
command:ruby=ruby "$(VIM_FILENAME)"
command:terraform,tfvars=terraform apply -var-file="config.tfvars"
command:gitlab-ci=glab ci lint
command:ansible=$(VIM:molecule_exec) '$(VIM:molecule_prefix) molecule converge'
command:dockerfile=docker build -f "$(VIM_FILENAME)" . -t prototype
command:docker-compose=docker-compose up

cwd=$(VIM_FILEDIR)
output=terminal
save=2

[gitlab-ci-status]
command=glab ci status
cwd=$(VIM_ROOT)
output=terminal
pos='bottom'
focus=1

[gitlab-ci-local]
command=gitlab-ci-local
cwd=$(VIM_ROOT)
output=terminal

[molecule-start]
command=docker run -it -d --name molecule --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(VIM_ROOT):/wd quay.io/ansible/toolset bash
output=vim

[molecule-stop]
command=docker stop molecule && echo exited
output=vim

[molecule-create]
command=$(VIM:molecule_exec) '$(VIM:molecule_prefix) molecule create'
output=terminal

[molecule-verify]
command=$(VIM:molecule_exec) '$(VIM:molecule_prefix) molecule verify'
output=terminal

[molecule-destroy]
command=$(VIM:molecule_exec) '$(VIM:molecule_prefix) molecule destroy'
output=terminal

[terraform-destroy]
command=terraform destroy -var-file="config.tfvars"
cwd=$(VIM_FILEDIR)
output=terminal

[terraform-plan]
command=terraform apply -var-file="config.tfvars"
cwd=$(VIM_FILEDIR)
output=terminal

[compose-up]
command=docker-compose up -d
cwd=$(VIM_FILEDIR)
output=terminal

[compose-down]
command=docker-compose down
cwd=$(VIM_FILEDIR)
output=terminal
