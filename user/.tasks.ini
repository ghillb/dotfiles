[*]
molecule_exec=docker exec -it molecule bash -c
molecule_prefix=cd wd/ansible && ANSIBLE_VAULT_PASSWORD_FILE=/wd/ansible/.vault.pw

[file-run]
cwd=$(VIM_FILEDIR)
output=terminal
command="$(VIM_FILEPATH)"
command:make="make"
command:c,cpp="$(VIM_PATHNOEXT)"
command:go=go run "$(VIM_FILENAME)"
command:rust=cargo test "$(VIM_FILENAME)"
command:python=python "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:sh,bash=bash "$(VIM_FILENAME)"
command:lua=lua "$(VIM_FILENAME)"
command:perl=perl "$(VIM_FILENAME)"
command:ruby=ruby "$(VIM_FILENAME)"
command:terraform,tfvars=terraform apply -var-file="config.tfvars"
command:gitlab-ci=gitlab-ci-local
command:ansible=$(VIM:molecule_exec) '$(VIM:molecule_prefix) molecule converge'
command:dockerfile=docker build -f "$(VIM_FILENAME)" . -t prototype
command:docker-compose=docker-compose up
command:ps1=pwsh "$(VIM_FILEPATH)"


[file-build]
cwd=$(VIM_FILEDIR)
output=terminal
command:go=go build "$(VIM_FILENAME)"

[gitlab-ci-status]
cwd=$(VIM_ROOT)
output=terminal
pos='bottom'
focus=1
command=glab ci status

[gitlab-ci-lint]
cwd=$(VIM_ROOT)
output=terminal
command:gitlab-ci=glab ci lint

[ansible-play]
cwd=$(VIM_FILEDIR)
output=terminal
command=ansible-playbook "$(VIM_FILENAME)"

[molecule-start]
output=vim
command=docker run -it -d --name molecule --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(VIM_CWD):/wd quay.io/ansible/toolset bash

[molecule-stop]
output=vim
command=docker stop molecule && echo exited

[molecule-login]
output=terminal
command=$(VIM:molecule_exec) '$(VIM:molecule_prefix) molecule login'

[molecule-create]
output=terminal
command=$(VIM:molecule_exec) '$(VIM:molecule_prefix) molecule create'

[molecule-verify]
output=terminal
command=$(VIM:molecule_exec) '$(VIM:molecule_prefix) molecule verify'

[molecule-destroy]
output=terminal
command=$(VIM:molecule_exec) '$(VIM:molecule_prefix) molecule destroy'

[terraform-destroy]
cwd=$(VIM_FILEDIR)
output=terminal
command:terraform,tfvars=terraform destroy -var-file="config.tfvars"

[terraform-plan]
cwd=$(VIM_FILEDIR)
output=terminal
pos=kitty
command:terraform,tfvars=terraform apply -var-file="config.tfvars"

[compose-up]
cwd=$(VIM_FILEDIR)
output=terminal
command:docker-compose=docker-compose up -d

[compose-down]
cwd=$(VIM_FILEDIR)
output=terminal
command:docker-compose=docker-compose down

[docker-run]
output=terminal
command:dockerfile=docker run -it prototype bash

[docker-start]
output=terminal
command:dockerfile=docker run --rm -dt --name procon prototype bash

[docker-login]
output=terminal
command:dockerfile=docker exec -it procon bash

[docker-stop]
output=terminal
command:dockerfile=docker stop procon
